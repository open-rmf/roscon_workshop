<?xml version='1.0' ?>

<launch>
  <arg name="use_sim_time" default="true" description="Use the /clock topic for time to sync with simulation"/>
  <arg name="config_file" default="$(find-pkg-share roscon_demos)/config/workshop/turtlebot_config.yaml" description="The config file that provides important parameters for setting up the adapter"/>
  <arg name="nav_graph_file" default="$(find-pkg-share roscon_maps)/maps/workshop/nav_graphs/0.yaml" description="The graph that this fleet should use for navigation"/>
  <arg name="server_uri" default="" description="The URI of the api server to transmit state and task information."/>
  <arg name="output" default="screen"/>
  <arg name="easy_fleet" default="false" description="Set to true if using the EasyFullControl fleet adapter"/>

  <!-- Fleet manager -->
  <node pkg="roscon_fleet_adapter"
        exec="fleet_manager"
        args="--config_file $(var config_file) --nav_graph $(var nav_graph_file)"
        output="both">

    <param name="use_sim_time" value="$(var use_sim_time)"/>
  </node>

  <group if="$(var easy_fleet)">
    <node pkg="roscon_fleet_adapter"
          exec="fleet_adapter"
          args="-c $(var config_file) -n $(var nav_graph_file) -sim"
          output="both">

      <param name="use_sim_time" value="$(var use_sim_time)"/>
      <param name="server_uri" value="$(var server_uri)"/>
    </node>
  </group>

  <group unless="$(var easy_fleet)">
      <node pkg="rmf_demos_fleet_adapter"
            exec="fleet_adapter"
            args="-c $(var config_file) -n $(var nav_graph_file) -sim"
            output="both">

        <param name="use_sim_time" value="$(var use_sim_time)"/>
        <param name="server_uri" value="$(var server_uri)"/>
      </node>
    </group>

</launch>
